pipeline{
    agent any
    environment {
     TEST_RESULT_FILE = 'test_result.txt'
     FIREBASE_DEPLOY_TOKEN = credentials('firebase-token')
    }

 stages{
        stage('Building'){
            steps{
		echo 'Biulding...'
		//sh 'firebase --version'
            }
        } 
        stage('Testing Environment'){
            steps{
            //sh 'firebase deploy -P devops-proj-testing --token "$FIREBASE_DEPLOY_TOKEN"'
            script {
                    try {
                        // Execute your setup commands
                        sh 'npm install selenium-webdriver'

                        // Run the test and capture the output
                        def output = sh(script: 'node test/test.js', returnStdout: true).trim()
                        
                        // Debugging: Print the output to verify
                        echo "Test Output: ${output}"
                        
                        // Write the test result to a file
                        if (output.contains('Testing Success')) {
                            writeFile file: env.TEST_RESULT_FILE, text: 'true'
                        } else {
                            writeFile file: env.TEST_RESULT_FILE, text: 'false'
                        }
                    } catch (Exception e) {
                        echo "Tests failed: ${e.message}"
                        currentBuild.result = 'FAILURE'
                        writeFile file: env.TEST_RESULT_FILE, text: 'false'
                    }
                }
	    }
        } 
        stage('Staging Environment'){
             when {
                expression {
                    // Read the test result from the file
                    def testResult = readFile(env.TEST_RESULT_FILE).trim()
                    return testResult == 'true'
                }
            }
	    steps{
             //sh 'firebase deploy -P devops-proj-staging --token "$FIREBASE_DEPLOY_TOKEN"'
            echo 'Staging...'
	    }
        } 
        stage('Production Environment'){
            steps{
          echo 'Production'  
	  //sh 'firebase deploy -P devops-proj-production-bcfd9 --token "$FIREBASE_DEPLOY_TOKEN"'
            }
        } 
    }

}
